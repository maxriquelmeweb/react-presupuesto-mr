{"version":3,"sources":["components/IngresoPresupuesto.jsx","components/IngresoArticulo.jsx","components/Articulo.jsx","components/Balance.jsx","App.js","helpers/localStorageInicial.js","reportWebVitals.js","index.js"],"names":["IngresoPresupuesto","presupuesto","actualizarPresupuesto","actualizarVentana","className","onSubmit","e","preventDefault","onChange","valor","parseInt","target","value","Number","isInteger","type","name","placeholder","IngresoArticulo","insertarArticulo","actualizarArticulos","useState","id","nombre","articulo","actualizarArticulo","error","actualizarError","actualizarStateArticulo","role","trim","uuidv4","reset","onClick","console","log","Articulo","eliminarArticulo","Balance","articulos","valorPendiente","App","listaArticulosLocalStorage","JSON","parse","localStorage","getItem","presupuestoLocalStorage","vetanaLocalStorage","ventana","useEffect","setItem","stringify","filter","boton","map","estado","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89928d1b.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\n\r\nconst IngresoPresupuesto = ({ presupuesto, actualizarPresupuesto, actualizarVentana }) => {\r\n\r\n    const inputActualizarPresupuesto = e => {\r\n        let valor = parseInt(e.target.value);\r\n        if (Number.isInteger(valor)) {\r\n            actualizarPresupuesto(valor)\r\n        }\r\n    }\r\n\r\n    const submitPresupuesto = e => {\r\n        e.preventDefault();\r\n        if (presupuesto > 0) {\r\n            actualizarVentana(true)\r\n        } else {\r\n            actualizarVentana(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-md-6 col-sm-8 col-10\">\r\n                <form onSubmit={submitPresupuesto}>\r\n                    <div className=\"mb-3\">\r\n                        <input onChange={inputActualizarPresupuesto} type=\"number\" name=\"presupuesto\" className=\"form-control\" placeholder=\"Ingrese presupuesto\" />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Ingresar presupuesto</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default IngresoPresupuesto;","import React, { Fragment, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst IngresoArticulo = ({ insertarArticulo, actualizarArticulos, actualizarPresupuesto, actualizarVentana }) => {\r\n\r\n    const [articulo, actualizarArticulo] = useState({\r\n        id: '',\r\n        nombre: '',\r\n        valor: 0\r\n    });\r\n\r\n    //creamos el state para el error\r\n    const [error, actualizarError] = useState(false);\r\n\r\n    //creamos la funcion para actualizar el state de articulo\r\n    const actualizarStateArticulo = e => {\r\n        if (e.target.name === 'valor') {\r\n            actualizarArticulo({\r\n                ...articulo,\r\n                [e.target.name]: parseInt(e.target.value)\r\n            });\r\n        } else {\r\n            actualizarArticulo({\r\n                ...articulo,\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    const { nombre, valor } = articulo;\r\n\r\n    const submitArticulo = e => {\r\n        e.preventDefault();\r\n        //validamos si se ha insertado un nombre\r\n        if (nombre.trim() === '' || valor < 1) {\r\n            actualizarError(true);\r\n            return;\r\n        }\r\n        actualizarError(false);\r\n\r\n        //asignamos un id\r\n        articulo.id = uuidv4();\r\n\r\n        //insertamos el articulo en la lista de articulos\r\n        insertarArticulo(articulo);\r\n\r\n        //limpiamos los valores del formulario\r\n        e.target.reset();\r\n        actualizarArticulo({\r\n            id: '',\r\n            nombre: '',\r\n            valor: 0,\r\n        });\r\n    }\r\n\r\n    const reiniciar = () => {\r\n        console.log(1)\r\n        actualizarArticulos([]);\r\n        actualizarPresupuesto(0);\r\n        actualizarVentana(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-md-6 col-sm-8 col-10\">\r\n                {error ? <div className=\"alert alert-danger text-center\" role=\"alert\">Ingrese un articulo</div> : null}\r\n                <form onSubmit={submitArticulo}>\r\n                    <div className=\"mb-3\">\r\n                        <input onChange={actualizarStateArticulo} name=\"nombre\" placeholder=\"Ingrese articulo\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input onChange={actualizarStateArticulo} name=\"valor\" type=\"number\" placeholder=\"Ingrese valor\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Agregar articulo</button>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <button type=\"button\" onClick={reiniciar} className=\"btn btn-primary btn-block\">Reiniciar presupuesto</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nIngresoArticulo.propTypes = {\r\n    insertarArticulo: PropTypes.func.isRequired\r\n}\r\nexport default IngresoArticulo;","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Articulo = ({ articulo, eliminarArticulo }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-xl-8 col-md-8 mt-2\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"justify-content-center col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\r\n                        <div className=\"card text-white bg-success mb-3\">\r\n                            <div className=\"card-header text-center\"><h5>{articulo.nombre}</h5></div>\r\n                            <div className=\"card-body\">\r\n                                <h6>Valor: {articulo.valor}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                        <button className=\"btn btn-danger btn-lg px-2 mb-3\"\r\n                            onClick={() => eliminarArticulo(articulo.id)}>\r\n                            Eliminar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nArticulo.propTypes = {\r\n    articulo: PropTypes.object.isRequired,\r\n    eliminarArticulo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Articulo;","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Balance = ({ articulos, presupuesto }) => {\r\n\r\n    let valorPendiente = 0;\r\n\r\n    for (let articulo of articulos) {\r\n        valorPendiente += articulo.valor;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 col-6\">\r\n                <div className={presupuesto < valorPendiente ? \"card bg-danger text-center\" : \"card bg-warning text-center\"}>\r\n                    <div className=\"card-body py-1\">\r\n                        <h6>Valor total: {valorPendiente}</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 col-6\">\r\n                <div className=\"card text-white bg-success text-center\">\r\n                    <div className=\"card-body py-1\">\r\n                        <h6>Presupuesto total: {presupuesto}</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nBalance.propTypes = {\r\n    articulos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Balance;","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { obtenerLocalStorageArticulos, obtenerLocalStoragePresupuesto, obtenerLocalStorageVentana } from './helpers/localStorageInicial';\r\nimport IngresoPresupuesto from './components/IngresoPresupuesto';\r\nimport IngresoArticulo from './components/IngresoArticulo';\r\nimport Articulo from './components/Articulo';\r\nimport Balance from './components/Balance';\r\n\r\nfunction App() {\r\n\r\n  //comprobamos los datos en el localStorage\r\n  let listaArticulosLocalStorage = obtenerLocalStorageArticulos();\r\n  let presupuestoLocalStorage = obtenerLocalStoragePresupuesto();\r\n  let vetanaLocalStorage = obtenerLocalStorageVentana();\r\n\r\n  //state de articulos \r\n  const [articulos, actualizarArticulos] = useState(listaArticulosLocalStorage);\r\n\r\n  //state de presupuesto\r\n  const [presupuesto, actualizarPresupuesto] = useState(presupuestoLocalStorage);\r\n\r\n  //state cerrarVentana\r\n  const [ventana, actualizarVentana] = useState(vetanaLocalStorage);\r\n\r\n  //effect de articulos\r\n  useEffect(() => {\r\n    //si tiene elementos la guardamos en el localStorage\r\n    if (listaArticulosLocalStorage !== '') {\r\n      localStorage.setItem('listaArticulos', JSON.stringify(articulos));\r\n    } else {\r\n      localStorage.setItem('listaArticulos', JSON.stringify(listaArticulosLocalStorage));\r\n    }\r\n  }, [articulos, listaArticulosLocalStorage]);\r\n\r\n  //effect de presupuesto\r\n  useEffect(() => {\r\n    //si tiene elementos la guardamos en el localStorage\r\n    if (presupuestoLocalStorage !== '') {\r\n      localStorage.setItem('presupuesto', JSON.stringify(presupuesto));\r\n    } else {\r\n      localStorage.setItem('presupuesto', JSON.stringify(presupuestoLocalStorage));\r\n    }\r\n  }, [presupuesto, presupuestoLocalStorage]);\r\n\r\n  useEffect(() => {\r\n    if (vetanaLocalStorage !== '') {\r\n      localStorage.setItem('ventana', JSON.stringify(ventana));\r\n    } else {\r\n      localStorage.setItem('ventana', JSON.stringify(vetanaLocalStorage));\r\n    }\r\n  }, [ventana, vetanaLocalStorage]);\r\n\r\n\r\n  //funcion que permite guardar los articulos\r\n  const insertarArticulo = articulo => {\r\n    //guardamos el articulo en el state\r\n    actualizarArticulos([...articulos, articulo]);\r\n  }\r\n\r\n  const eliminarArticulo = id => {\r\n    actualizarArticulos(articulos.filter(articulo => articulo.id !== id));\r\n  }\r\n\r\n  const actualizarArticulo = (id, boton) => {\r\n    actualizarArticulos(articulos.map(articulo => {\r\n      if (articulo.id === id && boton === 1) {\r\n        articulo.estado = true;\r\n      } else if (articulo.id === id && boton === 0) {\r\n        articulo.estado = false;\r\n      }\r\n      return articulo;\r\n    }));\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-2\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12  text-center\">\r\n            <h1 className=\"text-light\">mi Presupuesto</h1>\r\n          </div>\r\n        </div>\r\n        {ventana ?\r\n          <Fragment>\r\n\r\n            <div className=\"row justify-content-center mt-3\">\r\n              <IngresoArticulo\r\n                insertarArticulo={insertarArticulo}\r\n                actualizarArticulos={actualizarArticulos}\r\n                actualizarPresupuesto={actualizarPresupuesto}\r\n                actualizarVentana={actualizarVentana}\r\n              />\r\n            </div>\r\n            <div className=\"row justify-content-center mt-3\">\r\n              <Balance\r\n                articulos={articulos}\r\n                presupuesto={presupuesto}\r\n                actualizarPresupuesto={actualizarPresupuesto}\r\n              />\r\n            </div>\r\n            <div className=\"row justify-content-center mt-5\">\r\n              {articulos.map(articulo => (\r\n                <Articulo\r\n                  key={articulo.id}\r\n                  articulo={articulo}\r\n                  eliminarArticulo={eliminarArticulo}\r\n                  actualizarArticulo={actualizarArticulo}\r\n                />\r\n              ))}\r\n            </div>\r\n          </Fragment>\r\n\r\n          :\r\n          <div className=\"row justify-content-center mt-3\">\r\n            <IngresoPresupuesto\r\n              actualizarPresupuesto={actualizarPresupuesto}\r\n              presupuesto={presupuesto}\r\n              actualizarVentana={actualizarVentana}\r\n            />\r\n          </div>\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nconst obtenerLocalStorageArticulos = () => {\r\n    //lista en localStorage para articulos\r\n    let listaArticulos = JSON.parse(localStorage.getItem('listaArticulos'));\r\n    if (!listaArticulos)\r\n        return [];\r\n\r\n    return listaArticulos;\r\n}\r\n\r\nconst obtenerLocalStoragePresupuesto = () => {\r\n    //lista en localStorage para articulos\r\n    let presupuesto = JSON.parse(localStorage.getItem('presupuesto'));\r\n    if (!presupuesto)\r\n        return 0;\r\n\r\n    return presupuesto;\r\n}\r\n\r\nconst obtenerLocalStorageVentana = () => {\r\n    //lista en localStorage para articulos\r\n    let ventana = JSON.parse(localStorage.getItem('ventana'));\r\n    if (!ventana)\r\n        return false;\r\n\r\n    return ventana;\r\n}\r\n\r\nexport { obtenerLocalStorageArticulos, obtenerLocalStoragePresupuesto, obtenerLocalStorageVentana };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}